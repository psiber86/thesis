#!/bin/bash

if [ $# -lt 2 ]; then
    echo "usage: ./plotVSschedq_Xthreads </path/to/data/file> <static|dynamic>"
else
    filenameEXT=$(basename "$1")
    title=$(echo "$filenameEXT" | sed 's/.*-\(.*\)$/\1/g')
    filename=$(echo "$filenameEXT" | sed 's/\(.*\).txt$/\1/g') 

    if [ $2 == "static" ]; then
        four_lo=15
        four_hi=18
        six_lo=24
        six_hi=28
    elif [ $2 == "dynamic" ]; then
        three_lo=11
        three_hi=14
        four_lo=16
        four_hi=20
        five_lo=22
        five_hi=27
        six_lo=29
        six_hi=35
        seven_lo=37
        seven_hi=44
    else 
        echo $2
        echo "invalid option"
        exit
    fi

    if [ $2 == "dynamic" ]; then
        #determine yrange based on largest and smallest data values
        DATA=()
        for (( i=$three_lo; i<$three_hi; i++ ))
        do
            read -a sync_array <<< `sed -n ${i}p $1` 
            #add std sync sim times
            DATA+=(${sync_array[1]})
            # add hle
            DATA+=(${sync_array[3]})
            # add rtm-1retry 
            DATA+=(${sync_array[5]})
            # add rtm-9retry 
            DATA+=(${sync_array[7]})
            # add rtm-19retry 
            DATA+=(${sync_array[9]})
        done

        IFS=$'\n'
        min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
        max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
        echo $min_yrange
        echo $max_yrange

        echo "set terminal pdf" > "$filename-3thread.gpi"
        echo "set output \"$filename-3thread.pdf\"" >> "$filename-3thread.gpi"
        echo "set key top left" >> "$filename-3thread.gpi"
        echo "set xrange [1:3]" >> "$filename-3thread.gpi"
        echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-3thread.gpi"
        echo "set xtics 1" >> "$filename-3thread.gpi"
        echo "set style line 1 lt 1 lc rgb \"black\" lw 1" >> "$filename-3thread.gpi"
        echo "set style line 2 lt 2 lc rgb \"red\" lw 1" >> "$filename-3thread.gpi"
        echo "set style line 3 lt 3 lc rgb \"orange\" lw 1" >> "$filename-3thread.gpi"
        echo "set style line 4 lt 4 lc rgb \"green\" lw 1" >> "$filename-3thread.gpi"
        echo "set style line 5 lt 5 lc rgb \"blue\" lw 1" >> "$filename-3thread.gpi"
        echo "set xlabel 'Number of LTSF Queues'" >> "$filename-3thread.gpi"
        echo "set ylabel 'Simulation Time (s)'" >> "$filename-3thread.gpi"
        echo "plot \"<(sed -n '$three_lo,${three_hi}p' $1)\" using 1:2:3 title 'std' with lines ls 1, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:4:5 title 'hle' with lines ls 2, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:4:5 notitle with yerrorbars ls 2, \\">> "$filename-3thread.gpi"
        echo "'' using 1:6:7 title 'rtm-1retry' with lines ls 3, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:6:7 notitle with yerrorbars ls 3, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:8:9 title 'rtm-9retry' with lines ls 4, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:8:9 notitle with yerrorbars ls 4, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:10:11 title 'rtm-19retry' with lines ls 5, \\" >> "$filename-3thread.gpi"
        echo "'' using 1:10:11 notitle with yerrorbars ls 5 " >> "$filename-3thread.gpi"

        # perform actual plotting
        gnuplot "$filename-3thread.gpi"
    fi

    # write gnuplot.gpi file for 4thread 
    #determine yrange based on largest and smallest data values
    DATA=()
    sync_array=()
    for (( i=$four_lo; i<$four_hi; i++ ))
    do
        IFS=$' \t\n'
        read -a sync_array <<< `sed -n ${i}p $1` 
        #add std sync sim times
        DATA+=(${sync_array[1]})
        # add hle
        DATA+=(${sync_array[3]})
        # add rtm-1retry 
        DATA+=(${sync_array[5]})
        # add rtm-9retry 
        DATA+=(${sync_array[7]})
        # add rtm-19retry 
        DATA+=(${sync_array[9]})
    done

    IFS=$'\n'
    min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
    max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
    echo $min_yrange
    echo $max_yrange

    echo "set terminal pdf" > "$filename-4thread.gpi"
    echo "set output \"$filename-4thread.pdf\"" >> "$filename-4thread.gpi"
    echo "set key top left" >> "$filename-4thread.gpi"
    echo "set xrange [1:4]" >> "$filename-4thread.gpi"
    echo "set xtics 1" >> "$filename-4thread.gpi"
    echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-4thread.gpi"
    echo "set style line 1 lt 1 lc rgb \"black\" lw 1" >> "$filename-4thread.gpi"
    echo "set style line 2 lt 2 lc rgb \"red\" lw 1" >> "$filename-4thread.gpi"
    echo "set style line 3 lt 3 lc rgb \"orange\" lw 1" >> "$filename-4thread.gpi"
    echo "set style line 4 lt 4 lc rgb \"green\" lw 1" >> "$filename-4thread.gpi"
    echo "set style line 5 lt 5 lc rgb \"blue\" lw 1" >> "$filename-4thread.gpi"
    echo "set xlabel 'Number of LTSF Queues'" >> "$filename-4thread.gpi"
    echo "set ylabel 'Simulation Time (s)'" >> "$filename-4thread.gpi"
    echo "plot \"<(sed -n '$four_lo,${four_hi}p' $1)\" using 1:2:3 title 'std' with lines ls 1, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:4:5 title 'hle' with lines ls 2, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:4:5 notitle with yerrorbars ls 2, \\">> "$filename-4thread.gpi"
    echo "'' using 1:6:7 title 'rtm-1retry' with lines ls 3, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:6:7 notitle with yerrorbars ls 3, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:8:9 title 'rtm-9retry' with lines ls 4, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:8:9 notitle with yerrorbars ls 4, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:10:11 title 'rtm-19retry' with lines ls 5, \\" >> "$filename-4thread.gpi"
    echo "'' using 1:10:11 notitle with yerrorbars ls 5 " >> "$filename-4thread.gpi"

    # perform actual plotting
    gnuplot "$filename-4thread.gpi"

    if [ $2 == "dynamic" ]; then
        #determine yrange based on largest and smallest data values
        DATA=()
        sync_array=()
        for (( i=$five_lo; i<$five_hi; i++ ))
        do
            IFS=$' \t\n'
            read -a sync_array <<< `sed -n ${i}p $1` 
            #add std sync sim times
            DATA+=(${sync_array[1]})
            # add hle
            DATA+=(${sync_array[3]})
            # add rtm-1retry 
            DATA+=(${sync_array[5]})
            # add rtm-9retry 
            DATA+=(${sync_array[7]})
            # add rtm-19retry 
            DATA+=(${sync_array[9]})
        done

        IFS=$'\n'
        min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
        max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
        echo $min_yrange
        echo $max_yrange

        echo "set terminal pdf" > "$filename-5thread.gpi"
        echo "set output \"$filename-5thread.pdf\"" >> "$filename-5thread.gpi"
        echo "set key top right" >> "$filename-5thread.gpi"
        echo "set xrange [1:5]" >> "$filename-5thread.gpi"
        echo "set xtics 1" >> "$filename-5thread.gpi"
        echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-5thread.gpi"
        echo "set style line 1 lt 1 lc rgb \"black\" lw 1" >> "$filename-5thread.gpi"
        echo "set style line 2 lt 2 lc rgb \"red\" lw 1" >> "$filename-5thread.gpi"
        echo "set style line 3 lt 3 lc rgb \"orange\" lw 1" >> "$filename-5thread.gpi"
        echo "set style line 4 lt 4 lc rgb \"green\" lw 1" >> "$filename-5thread.gpi"
        echo "set style line 5 lt 5 lc rgb \"blue\" lw 1" >> "$filename-5thread.gpi"
        echo "set xlabel 'Number of LTSF Queues'" >> "$filename-5thread.gpi"
        echo "set ylabel 'Simulation Time (s)'" >> "$filename-5thread.gpi"
        echo "plot \"<(sed -n '$five_lo,${five_hi}p' $1)\" using 1:2:3 title 'std' with lines ls 1, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:4:5 title 'hle' with lines ls 2, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:4:5 notitle with yerrorbars ls 2, \\">> "$filename-5thread.gpi"
        echo "'' using 1:6:7 title 'rtm-1retry' with lines ls 3, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:6:7 notitle with yerrorbars ls 3, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:8:9 title 'rtm-9retry' with lines ls 4, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:8:9 notitle with yerrorbars ls 4, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:10:11 title 'rtm-19retry' with lines ls 5, \\" >> "$filename-5thread.gpi"
        echo "'' using 1:10:11 notitle with yerrorbars ls 5 " >> "$filename-5thread.gpi"

        # perform actual plotting
        gnuplot "$filename-5thread.gpi"
    fi

    #determine yrange based on largest and smallest data values
    DATA=()
    sync_array=()
    for (( i=$six_lo; i<$six_hi; i++ ))
    do
        IFS=$' \t\n'
        read -a sync_array <<< `sed -n ${i}p $1` 
        #add std sync sim times
        DATA+=(${sync_array[1]})
        # add hle
        DATA+=(${sync_array[3]})
        # add rtm-1retry 
        DATA+=(${sync_array[5]})
        # add rtm-9retry 
        DATA+=(${sync_array[7]})
        # add rtm-19retry 
        DATA+=(${sync_array[9]})
    done

    IFS=$'\n'
    min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
    max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
    echo $min_yrange
    echo $max_yrange
        
    echo "set terminal pdf" > "$filename-6thread.gpi"
    echo "set output \"$filename-6thread.pdf\"" >> "$filename-6thread.gpi"
    echo "set key top right" >> "$filename-6thread.gpi"
    echo "set xrange [1:6]" >> "$filename-6thread.gpi"
    echo "set xtics 1" >> "$filename-6thread.gpi"
    echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-6thread.gpi"
    echo "set style line 1 lt 1 lc rgb \"black\" lw 1" >> "$filename-6thread.gpi"
    echo "set style line 2 lt 2 lc rgb \"red\" lw 1" >> "$filename-6thread.gpi"
    echo "set style line 3 lt 3 lc rgb \"orange\" lw 1" >> "$filename-6thread.gpi"
    echo "set style line 4 lt 4 lc rgb \"green\" lw 1" >> "$filename-6thread.gpi"
    echo "set style line 5 lt 5 lc rgb \"blue\" lw 1" >> "$filename-6thread.gpi"
    echo "set xlabel 'Number of LTSF Queues'" >> "$filename-6thread.gpi"
    echo "set ylabel 'Simulation Time (s)'" >> "$filename-6thread.gpi"
    echo "plot \"<(sed -n '$six_lo,${six_hi}p' $1)\" using 1:2:3 title 'std' with lines ls 1, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:4:5 title 'hle' with lines ls 2, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:4:5 notitle with yerrorbars ls 2, \\">> "$filename-6thread.gpi"
    echo "'' using 1:6:7 title 'rtm-1retry' with lines ls 3, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:6:7 notitle with yerrorbars ls 3, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:8:9 title 'rtm-9retry' with lines ls 4, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:8:9 notitle with yerrorbars ls 4, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:10:11 title 'rtm-19retry' with lines ls 5, \\" >> "$filename-6thread.gpi"
    echo "'' using 1:10:11 notitle with yerrorbars ls 5 " >> "$filename-6thread.gpi"

    # perform actual plotting
    gnuplot "$filename-6thread.gpi"

    if [ $2 == "dynamic" ]; then
        #determine yrange based on largest and smallest data values
        DATA=()
        sync_array=()
        for (( i=$seven_lo; i<$seven_hi; i++ ))
        do
            IFS=$' \t\n'
            read -a sync_array <<< `sed -n ${i}p $1` 
            #add std sync sim times
            DATA+=(${sync_array[1]})
            # add hle
            DATA+=(${sync_array[3]})
            # add rtm-1retry 
            DATA+=(${sync_array[5]})
            # add rtm-9retry 
            DATA+=(${sync_array[7]})
            # add rtm-19retry 
            DATA+=(${sync_array[9]})
        done

        IFS=$'\n'
        min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
        max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
        echo $min_yrange
        echo $max_yrange

        echo "set terminal pdf" > "$filename-7thread.gpi"
        echo "set output \"$filename-7thread.pdf\"" >> "$filename-7thread.gpi"
        echo "set key top right" >> "$filename-7thread.gpi"
        echo "set xrange [1:7]" >> "$filename-7thread.gpi"
        echo "set xtics 1" >> "$filename-7thread.gpi"
        echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-7thread.gpi"
        echo "set style line 1 lt 1 lc rgb \"black\" lw 1" >> "$filename-7thread.gpi"
        echo "set style line 2 lt 2 lc rgb \"red\" lw 1" >> "$filename-7thread.gpi"
        echo "set style line 3 lt 3 lc rgb \"orange\" lw 1" >> "$filename-7thread.gpi"
        echo "set style line 4 lt 4 lc rgb \"green\" lw 1" >> "$filename-7thread.gpi"
        echo "set style line 5 lt 5 lc rgb \"blue\" lw 1" >> "$filename-7thread.gpi"
        echo "set xlabel 'Number of LTSF Queues'" >> "$filename-7thread.gpi"
        echo "set ylabel 'Simulation Time (s)'" >> "$filename-7thread.gpi"
        echo "plot \"<(sed -n '$seven_lo,${seven_hi}p' $1)\" using 1:2:3 title 'std' with lines ls 1, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:4:5 title 'hle' with lines ls 2, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:4:5 notitle with yerrorbars ls 2, \\">> "$filename-7thread.gpi"
        echo "'' using 1:6:7 title 'rtm-1retry' with lines ls 3, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:6:7 notitle with yerrorbars ls 3, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:8:9 title 'rtm-9retry' with lines ls 4, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:8:9 notitle with yerrorbars ls 4, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:10:11 title 'rtm-19retry' with lines ls 5, \\" >> "$filename-7thread.gpi"
        echo "'' using 1:10:11 notitle with yerrorbars ls 5 " >> "$filename-7thread.gpi"

        # perform actual plotting
        gnuplot "$filename-7thread.gpi"
    fi

    rm *.gpi
    mv *.pdf ../figures/
fi
