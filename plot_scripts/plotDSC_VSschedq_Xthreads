#!/bin/bash

if [ $# -lt 4 ]; then
    echo "usage: ./plotVSschedq_Xthreads </path/to/data/file.MultiSet> </path/to/data/file.SplayTree> <static|dynamic> <hle|rtm-1retry|rtm-9retry|rtm-19retry>"
else
    filenameEXT=$(basename "$1")
    title=$(echo "$filenameEXT" | sed 's/.*-\(.*\)$/\1/g')
    filename=$(echo "$filenameEXT" | sed 's/\(.*\)-.*.txt$/\1/g') 

    if [ $3 == "static" ]; then
        four_lo=15
        four_hi=18
        six_lo=24
        six_hi=28
    elif [ $3 == "dynamic" ]; then
        three_lo=11
        three_hi=14
        four_lo=16
        four_hi=20
        five_lo=22
        five_hi=27
        six_lo=29
        six_hi=35
        seven_lo=37
        seven_hi=44
    else 
        echo $3
        echo "invalid option"
        exit
    fi

    if [ $4 == "hle" ]; then
        data=4
        err=5
    elif [ $4 == "rtm-1retry" ]; then
        data=6
        err=7
    elif [ $4 == "rtm-9retry" ]; then
        data=8
        err=9
    elif [ $4 == "rtm-19retry" ]; then
        data=10
        err=11
    else
        echo $4
        echo "invalid option"
        exit
    fi

    if [ $3 == "dynamic" ]; then
        #determine yrange based on largest and smallest data values
        DATA=()
        for (( i=$three_lo; i<$three_hi; i++ ))
        do
            read -a stdms_array <<< `sed -n ${i}p $1` 
            read -a stdst_array <<< `sed -n ${i}p $2`
            #add std sync sim times
            DATA+=(${stdms_array[1]})
            DATA+=(${stdst_array[1]})
            # add secondary sync sim times
            DATA+=(${stdms_array[$data-1]})
            DATA+=(${stdst_array[$data-1]})
        done

        IFS=$'\n'
        min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
        max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
        echo $min_yrange-5
        echo $max_yrange

        echo "set terminal pdf monochrome dashed" > "$filename-msVSst-3thread-$4.gpi"
        echo "set output \"$filename-msVSst-3thread-$4.pdf\"" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set key top right" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set xrange [1:3]" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set xtics 1" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set yrange [$min_yrange-5:$max_yrange+8]" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set style line 1 lt 3 lc rgb \"black\" lw 1" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set style line 2 lt 3 lc rgb \"red\" lw 1" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set style line 3 lt 1 lc rgb \"black\" lw 1" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set style line 4 lt 1 lc rgb \"red\" lw 1" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set xlabel 'Number of LTSF Queues'" >> "$filename-msVSst-3thread-$4.gpi"
        echo "set ylabel 'Simulation Time (s)'" >> "$filename-msVSst-3thread-$4.gpi"
        echo "plot \"<(sed -n '$three_lo,${three_hi}p' $1)\" using 1:2:3 title 'std sync, multi-set' with lines ls 1, \\" >> "$filename-msVSst-3thread-$4.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-msVSst-3thread-$4.gpi"
        echo "\"<(sed -n '$three_lo,${three_hi}p' $2)\" using 1:2:3 title 'std sync, splay tree' with lines ls 2, \\" >> "$filename-msVSst-3thread-$4.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 2, \\" >> "$filename-msVSst-3thread-$4.gpi"
        echo "\"<(sed -n '$three_lo,${three_hi}p' $1)\" using 1:$data:$err title '$4 sync, multi-set' with lines ls 3, \\" >> "$filename-msVSst-3thread-$4.gpi"
        echo "'' using 1:$data:$err notitle with yerrorbars ls 3, \\" >> "$filename-msVSst-3thread-$4.gpi"
        echo "\"<(sed -n '$three_lo,${three_hi}p' $2)\" using 1:$data:$err title '$4 sync, splay tree' with lines ls 4, \\" >> "$filename-msVSst-3thread-$4.gpi"
        echo "'' using 1:$data:$err notitle with yerrorbars ls 4" >> "$filename-msVSst-3thread-$4.gpi"

        # perform actual plotting
        gnuplot "$filename-msVSst-3thread-$4.gpi"
    fi

    # write gnuplot.gpi file for 4thread 
    #determine yrange based on largest and smallest data values
    DATA=()
    stdms_array=()
    stdst_array=()
    for (( i=$four_lo; i<$four_hi; i++ ))
    do
        IFS=$' \t\n'
        read -a stdms_array <<< `sed -n ${i}p $1` 
        read -a stdst_array <<< `sed -n ${i}p $2`
        #add std sync sim times
        DATA+=(${stdms_array[1]})
        DATA+=(${stdst_array[1]})
        # add secondary sync sim times
        DATA+=(${stdms_array[$data-1]})
        DATA+=(${stdst_array[$data-1]})
    done

    IFS=$'\n'
    min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
    max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
    echo $min_yrange-5
    echo $max_yrange
    echo "set terminal pdf monochrome dashed" > "$filename-msVSst-4thread-$4.gpi"
    echo "set output \"$filename-msVSst-4thread-$4.pdf\"" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set key top right" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set xrange [1:4]" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set xtics 1" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set style line 1 lt 3 lc rgb \"black\" lw 1" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set style line 2 lt 3 lc rgb \"red\" lw 1" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set style line 3 lt 1 lc rgb \"black\" lw 1" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set style line 4 lt 1 lc rgb \"red\" lw 1" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set xlabel 'Number of LTSF Queues'" >> "$filename-msVSst-4thread-$4.gpi"
    echo "set ylabel 'Simulation Time (s)'" >> "$filename-msVSst-4thread-$4.gpi"
    echo "plot \"<(sed -n '$four_lo,${four_hi}p' $1)\" using 1:2:3 title 'std sync, multi-set' with lines ls 1, \\" >> "$filename-msVSst-4thread-$4.gpi"
    echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-msVSst-4thread-$4.gpi"
    echo "\"<(sed -n '$four_lo,${four_hi}p' $2)\" using 1:2:3 title 'std sync, splay tree' with lines ls 2, \\" >> "$filename-msVSst-4thread-$4.gpi"
    echo "'' using 1:2:3 notitle with yerrorbars ls 2, \\" >> "$filename-msVSst-4thread-$4.gpi"
    echo "\"<(sed -n '$four_lo,${four_hi}p' $1)\" using 1:$data:$err title '$4 sync, multi-set' with lines ls 3, \\" >> "$filename-msVSst-4thread-$4.gpi"
    echo "'' using 1:$data:$err notitle with yerrorbars ls 3, \\" >> "$filename-msVSst-4thread-$4.gpi"
    echo "\"<(sed -n '$four_lo,${four_hi}p' $2)\" using 1:$data:$err title '$4 sync, splay tree' with lines ls 4, \\" >> "$filename-msVSst-4thread-$4.gpi"
    echo "'' using 1:$data:$err notitle with yerrorbars ls 4" >> "$filename-msVSst-4thread-$4.gpi"
    
    # perform actual plotting
    gnuplot "$filename-msVSst-4thread-$4.gpi"

    if [ $3 == "dynamic" ]; then
        #determine yrange based on largest and smallest data values
        DATA=()
        for (( i=$five_lo; i<$five_hi; i++ ))
        do
            IFS=$' \t\n'
            read -a stdms_array <<< `sed -n ${i}p $1` 
            read -a stdst_array <<< `sed -n ${i}p $2`
            #add std sync sim times
            DATA+=(${stdms_array[1]})
            DATA+=(${stdst_array[1]})
            # add secondary sync sim times
            DATA+=(${stdms_array[$data-1]})
            DATA+=(${stdst_array[$data-1]})
        done

        IFS=$'\n'
        min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
        max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
        echo $min_yrange-5
        echo $max_yrange
        echo "set terminal pdf monochrome dashed" > "$filename-msVSst-5thread-$4.gpi"
        echo "set output \"$filename-msVSst-5thread-$4.pdf\"" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set key top right" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set xrange [1:5]" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set xtics 1" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set style line 1 lt 3 lc rgb \"black\" lw 1" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set style line 2 lt 3 lc rgb \"red\" lw 1" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set style line 3 lt 1 lc rgb \"black\" lw 1" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set style line 4 lt 1 lc rgb \"red\" lw 1" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set xlabel 'Number of LTSF Queues'" >> "$filename-msVSst-5thread-$4.gpi"
        echo "set ylabel 'Simulation Time (s)'" >> "$filename-msVSst-5thread-$4.gpi"
        echo "plot \"<(sed -n '$five_lo,${five_hi}p' $1)\" using 1:2:3 title 'std sync, multi-set' with lines ls 1, \\" >> "$filename-msVSst-5thread-$4.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-msVSst-5thread-$4.gpi"
        echo "\"<(sed -n '$five_lo,${five_hi}p' $2)\" using 1:2:3 title 'std sync, splay tree' with lines ls 2, \\" >> "$filename-msVSst-5thread-$4.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 2, \\" >> "$filename-msVSst-5thread-$4.gpi"
        echo "\"<(sed -n '$five_lo,${five_hi}p' $1)\" using 1:$data:$err title '$4 sync, multi-set' with lines ls 3, \\" >> "$filename-msVSst-5thread-$4.gpi"
        echo "'' using 1:$data:$err notitle with yerrorbars ls 3, \\" >> "$filename-msVSst-5thread-$4.gpi"
        echo "\"<(sed -n '$five_lo,${five_hi}p' $2)\" using 1:$data:$err title '$4 sync, splay tree' with lines ls 4, \\" >> "$filename-msVSst-5thread-$4.gpi"
        echo "'' using 1:$data:$err notitle with yerrorbars ls 4" >> "$filename-msVSst-5thread-$4.gpi"
        
        # perform actual plotting
        gnuplot "$filename-msVSst-5thread-$4.gpi"
    fi

    # write gnuplot.gpi file for 6thread 
    #determine yrange based on largest and smallest data values
    DATA=()
    stdms_array=()
    stdst_array=()
    for (( i=$six_lo; i<$six_hi; i++ ))
    do
        IFS=$' \t\n'
        read -a stdms_array <<< `sed -n ${i}p $1` 
        read -a stdst_array <<< `sed -n ${i}p $2`
        #add std sync sim times
        DATA+=(${stdms_array[1]})
        DATA+=(${stdst_array[1]})
        # add secondary sync sim times
        DATA+=(${stdms_array[$data-1]})
        DATA+=(${stdst_array[$data-1]})
    done

    IFS=$'\n'
    min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
    max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
    echo $min_yrange-5
    echo $max_yrange
    echo "set terminal pdf monochrome dashed" > "$filename-msVSst-6thread-$4.gpi"
    echo "set output \"$filename-msVSst-6thread-$4.pdf\"" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set key top right" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set xrange [1:6]" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set xtics 1" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set style line 1 lt 3 lc rgb \"black\" lw 1" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set style line 2 lt 3 lc rgb \"red\" lw 1" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set style line 3 lt 1 lc rgb \"black\" lw 1" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set style line 4 lt 1 lc rgb \"red\" lw 1" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set xlabel 'Number of LTSF Queues'" >> "$filename-msVSst-6thread-$4.gpi"
    echo "set ylabel 'Simulation Time (s)'" >> "$filename-msVSst-6thread-$4.gpi"
    echo "plot \"<(sed -n '$six_lo,${six_hi}p' $1)\" using 1:2:3 title 'std sync, multi-set' with lines ls 1, \\" >> "$filename-msVSst-6thread-$4.gpi"
    echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-msVSst-6thread-$4.gpi"
    echo "\"<(sed -n '$six_lo,${six_hi}p' $2)\" using 1:2:3 title 'std sync, splay tree' with lines ls 2, \\" >> "$filename-msVSst-6thread-$4.gpi"
    echo "'' using 1:2:3 notitle with yerrorbars ls 2, \\" >> "$filename-msVSst-6thread-$4.gpi"
    echo "\"<(sed -n '$six_lo,${six_hi}p' $1)\" using 1:$data:$err title '$4 sync, multi-set' with lines ls 3, \\" >> "$filename-msVSst-6thread-$4.gpi"
    echo "'' using 1:$data:$err notitle with yerrorbars ls 3, \\" >> "$filename-msVSst-6thread-$4.gpi"
    echo "\"<(sed -n '$six_lo,${six_hi}p' $2)\" using 1:$data:$err title '$4 sync, splay tree' with lines ls 4, \\" >> "$filename-msVSst-6thread-$4.gpi"
    echo "'' using 1:$data:$err notitle with yerrorbars ls 4" >> "$filename-msVSst-6thread-$4.gpi"
    
    # perform actual plotting
    gnuplot "$filename-msVSst-6thread-$4.gpi"


    if [ $3 == "dynamic" ]; then
        #determine yrange based on largest and smallest data values
        DATA=()
        for (( i=$seven_lo; i<$seven_hi; i++ ))
        do
            IFS=$' \t\n'
            read -a stdms_array <<< `sed -n ${i}p $1` 
            read -a stdst_array <<< `sed -n ${i}p $2`
            #add std sync sim times
            DATA+=(${stdms_array[1]})
            DATA+=(${stdst_array[1]})
            # add secondary sync sim times
            DATA+=(${stdms_array[$data-1]})
            DATA+=(${stdst_array[$data-1]})
        done

        IFS=$'\n'
        min_yrange=`echo "${DATA[*]}" | sort -nr | tail -n1`
        max_yrange=`echo "${DATA[*]}" | sort -nr | head -n1`
        echo $min_yrange-5
        echo $max_yrange
        echo "set terminal pdf monochrome dashed" > "$filename-msVSst-7thread-$4.gpi"
        echo "set output \"$filename-msVSst-7thread-$4.pdf\"" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set key top right" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set xrange [1:7]" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set xtics 1" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set yrange [$min_yrange-5:$max_yrange+5]" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set style line 1 lt 3 lc rgb \"black\" lw 1" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set style line 2 lt 3 lc rgb \"red\" lw 1" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set style line 3 lt 1 lc rgb \"black\" lw 1" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set style line 4 lt 1 lc rgb \"red\" lw 1" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set xlabel 'Number of LTSF Queues'" >> "$filename-msVSst-7thread-$4.gpi"
        echo "set ylabel 'Simulation Time (s)'" >> "$filename-msVSst-7thread-$4.gpi"
        echo "plot \"<(sed -n '$seven_lo,${seven_hi}p' $1)\" using 1:2:3 title 'std sync, multi-set' with lines ls 1, \\" >> "$filename-msVSst-7thread-$4.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 1, \\" >> "$filename-msVSst-7thread-$4.gpi"
        echo "\"<(sed -n '$seven_lo,${seven_hi}p' $2)\" using 1:2:3 title 'std sync, splay tree' with lines ls 2, \\" >> "$filename-msVSst-7thread-$4.gpi"
        echo "'' using 1:2:3 notitle with yerrorbars ls 2, \\" >> "$filename-msVSst-7thread-$4.gpi"
        echo "\"<(sed -n '$seven_lo,${seven_hi}p' $1)\" using 1:$data:$err title '$4 sync, multi-set' with lines ls 3, \\" >> "$filename-msVSst-7thread-$4.gpi"
        echo "'' using 1:$data:$err notitle with yerrorbars ls 3, \\" >> "$filename-msVSst-7thread-$4.gpi"
        echo "\"<(sed -n '$seven_lo,${seven_hi}p' $2)\" using 1:$data:$err title '$4 sync, splay tree' with lines ls 4, \\" >> "$filename-msVSst-7thread-$4.gpi"
        echo "'' using 1:$data:$err notitle with yerrorbars ls 4" >> "$filename-msVSst-7thread-$4.gpi"
        
        # perform actual plotting
        gnuplot "$filename-msVSst-7thread-$4.gpi"
    fi

    rm *.gpi
    mv *.pdf ../figures/
fi
